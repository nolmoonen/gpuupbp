# Copyright (C) 2021, Nol Moonen
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# (The above is MIT License: http://en.wikipedia.origin/wiki/MIT_License)

import csv
import os

general_params = \
    '-a upbp_all ' \
    '-i 60 ' \
    '-r_alpha 1.0 ' \
    '-log'

# location of the executable
exe_loc = '@BINARY_DIR@/bin/gpuupbp'

# number of iterations not counted, as a warmup
warmup = 2


def run(params):
    os.system(exe_loc + ' ' + general_params + ' ' + params)


if __name__ == '__main__':
    # remove all previous log files
    for filename in os.listdir():
        if filename.endswith('_log.txt'):
            os.remove(filename)

    run(
        '-s -1 @SCENE_DIR@/bathroom/bathroom.obj '
        '-l 20 '
        '-pbc 3000 '
        '-r 672x896 '
        '-o bathroom.bmp')
    run(
        '-s -1 @SCENE_DIR@/bistro/bistro.obj '
        '-l 80 '
        '-r 1920x1080 '
        '-o bistro.bmp')
    run(''
        '-s -1 @SCENE_DIR@/mirrorballs/mirrorballs.obj '
        '-l 12 '
        '-pbc 4000 '
        '-r 800x800 '
        '-o mirrorballs.bmp')
    run(
        '-s -1 @SCENE_DIR@/sanmiguel/sanmiguel.obj '
        '-l 80 '
        '-pbc 4000 '
        '-r 800x800 '
        '-o sanmiguel.bmp')
    run(
        '-s -1 @SCENE_DIR@/stilllife/stilllife.obj '
        '-l 80 '
        '-pbc 23000 '
        '-r 1600x700 '
        '-o stilllife.bmp')
    run(
        '-s -1 @SCENE_DIR@/suntemple/suntemple.obj '
        '-l 80 '
        '-pbc 3000 '
        '-r 576x1024 '
        '-o suntemple.bmp')

    # compute the running times and print to out
    for filename in os.listdir():
        if filename.endswith('_log.txt'):
            with open(filename, newline='') as csvfile:
                reader = csv.reader(csvfile, delimiter=',')
                next(reader, None)  # skip header
                for i in range(warmup):  # skip warmup period
                    next(reader, None)
                time = 0
                samples = 0
                for row in reader:
                    scene_name = row[0].strip()
                    time = time + float(row[2]) + float(row[3]) + float(row[4])
                    samples += 1
                    print(scene_name + ': ' + str(time / samples) + 's')
